<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demoframework.dao.OrderChangeLogDao">
    <resultMap id="BaseResultMap" type="com.example.demoframework.domain.entity.OrderChangeLog">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="vender_id" jdbcType="BIGINT" property="venderId"/>
        <result column="app_key" jdbcType="VARCHAR" property="appKey"/>
        <result column="order_id" jdbcType="BIGINT" property="orderId"/>
        <result column="operate_dt" jdbcType="TIMESTAMP" property="operateDt"/>
        <result column="operate_type" jdbcType="TINYINT" property="operateType"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
        <result column="old_status" jdbcType="TINYINT" property="oldStatus"/>
        <result column="target_status" jdbcType="TINYINT" property="targetStatus"/>
        <result column="yn" jdbcType="TINYINT" property="yn"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, vender_id, app_key, order_id, operate_dt, operate_type, `operator`, old_status,
        target_status, yn
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_change_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from order_change_log
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.example.demoframework.domain.entity.OrderChangeLog" useGeneratedKeys="true">
        insert into order_change_log (vender_id, app_key, order_id,
        operate_dt, operate_type, `operator`,
        old_status, target_status, yn
        )
        values (#{venderId,jdbcType=BIGINT}, #{appKey,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT},
        #{operateDt,jdbcType=TIMESTAMP}, #{operateType,jdbcType=TINYINT}, #{operator,jdbcType=VARCHAR},
        #{oldStatus,jdbcType=TINYINT}, #{targetStatus,jdbcType=TINYINT}, #{yn,jdbcType=TINYINT}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.example.demoframework.domain.entity.OrderChangeLog" useGeneratedKeys="true">
        insert into order_change_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="venderId != null">
                vender_id,
            </if>
            <if test="appKey != null">
                app_key,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="operateDt != null">
                operate_dt,
            </if>
            <if test="operateType != null">
                operate_type,
            </if>
            <if test="operator != null">
                `operator`,
            </if>
            <if test="oldStatus != null">
                old_status,
            </if>
            <if test="targetStatus != null">
                target_status,
            </if>
            <if test="yn != null">
                yn,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="venderId != null">
                #{venderId,jdbcType=BIGINT},
            </if>
            <if test="appKey != null">
                #{appKey,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="operateDt != null">
                #{operateDt,jdbcType=TIMESTAMP},
            </if>
            <if test="operateType != null">
                #{operateType,jdbcType=TINYINT},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="oldStatus != null">
                #{oldStatus,jdbcType=TINYINT},
            </if>
            <if test="targetStatus != null">
                #{targetStatus,jdbcType=TINYINT},
            </if>
            <if test="yn != null">
                #{yn,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demoframework.domain.entity.OrderChangeLog">
        update order_change_log
        <set>
            <if test="venderId != null">
                vender_id = #{venderId,jdbcType=BIGINT},
            </if>
            <if test="appKey != null">
                app_key = #{appKey,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="operateDt != null">
                operate_dt = #{operateDt,jdbcType=TIMESTAMP},
            </if>
            <if test="operateType != null">
                operate_type = #{operateType,jdbcType=TINYINT},
            </if>
            <if test="operator != null">
                `operator` = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="oldStatus != null">
                old_status = #{oldStatus,jdbcType=TINYINT},
            </if>
            <if test="targetStatus != null">
                target_status = #{targetStatus,jdbcType=TINYINT},
            </if>
            <if test="yn != null">
                yn = #{yn,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demoframework.domain.entity.OrderChangeLog">
        update order_change_log
        set vender_id = #{venderId,jdbcType=BIGINT},
        app_key = #{appKey,jdbcType=VARCHAR},
        order_id = #{orderId,jdbcType=BIGINT},
        operate_dt = #{operateDt,jdbcType=TIMESTAMP},
        operate_type = #{operateType,jdbcType=TINYINT},
        `operator` = #{operator,jdbcType=VARCHAR},
        old_status = #{oldStatus,jdbcType=TINYINT},
        target_status = #{targetStatus,jdbcType=TINYINT},
        yn = #{yn,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>